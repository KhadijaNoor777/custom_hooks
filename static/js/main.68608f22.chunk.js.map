{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useChangeTheme.js","Archive.js","App.js","reportWebVitals.js","hooks/i18n.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useChangeTheme","theme","setTheme","useEffect","postsEl","document","getElementsByClassName","classList","add","Archive","username","setUsername","password","setPassword","user","setUser","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","storedString","setStoredString","currentTheme","setCurrentTheme","useTranslation","t","i18n","handleCurrentTheme","background","color","changeCurrentLanguage","lng","changeLanguage","style","className","exact","path","render","props","Fragment","to","onClick","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","backend","loadPath","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68608f22.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\n//setting initial state\r\nfunction useLocalStorage(key, initialValue) {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try{\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    })\r\n\r\n    const setValue = (value) => {\r\n        try{\r\n            //Allow value to be a function so we have same API as useState????\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore)\r\n    \r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore))\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n       \r\n    }\r\n\r\n    return [storedValue, setValue];\r\n\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, {useState, useEffect} from 'react'\r\nimport useLocalStorage from './useLocalStorage'\r\n\r\nfunction useChangeTheme(){\r\n\r\n    const [theme, setTheme] = useLocalStorage(\"theme\", \"\")\r\n\r\n    useEffect(() => {\r\n        const postsEl = document.getElementsByClassName('Posts')\r\n        console.log('initial theme', theme)\r\n        if(theme == 'dark'){\r\n            postsEl[0] && postsEl[0].classList.add(theme)\r\n        }\r\n    }, [])\r\n\r\n    return [theme, setTheme];\r\n\r\n}\r\n\r\nexport default useChangeTheme;","import React, {useState} from 'react'\r\n\r\nfunction Archive() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        setUser(userData);\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Archive</h1>\r\n            <h1>Login</h1>\r\n            <form  onSubmit={handleSubmit}>\r\n                <input type='text' placeholder='Username' \r\n                       onChange={(e) => setUsername(e.target.value)}  \r\n                       value={username} \r\n                /><br/>\r\n                <input type='password' placeholder='Password' \r\n                       onChange={(e) => setPassword(e.target.value)}  \r\n                       value={password} \r\n                /><br/>\r\n                <button type='submit'>Login</button>\r\n            </form>\r\n\r\n            {/* {user && JSON.stringify(user, null, 100)} */}\r\n            {user && <div>{user.username} <br/> {user.password} </div>}\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst formStyle = {\r\n    textAlign: 'center',\r\n\r\n}\r\n\r\n\r\nexport default Archive;\r\n","import React, {useState, useSuspense} from 'react'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport useChangeTheme from './hooks/useChangeTheme'\nimport { useTranslation } from 'react-i18next'\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Archive from './Archive'\nimport './App.css';\n\nfunction App() {\n\n  const [storedString, setStoredString] = useLocalStorage(\"stored string\", \"\");\n  const [currentTheme, setCurrentTheme] = useChangeTheme()\n  const [t, i18n] = useTranslation()\n\n\n  const handleCurrentTheme = () => {\n    if(currentTheme !== 'dark'){\n      setCurrentTheme('dark')\n    }\n    else if(currentTheme === 'dark'){\n      setCurrentTheme('light')\n    }\n    else{\n      setCurrentTheme('light')\n    }\n  }\n\n  const theme = {\n    background: currentTheme == 'dark' ? 'black' : 'white',\n    color: currentTheme == 'dark' ? 'white' : 'black'\n  }\n\n  const changeCurrentLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  }\n\n  return (\n    <Router>\n      \n      <div style={theme} className='Posts'>\n        <Route exact path='/' render={props =>(\n          <React.Fragment>\n\n            <h1>{t('headers.about')}</h1>\n            <Link to='/archive'><h1>{t('headers.archive')}</h1></Link>\n\n            <h1>{t('headers.saveValue')}</h1>\n            <input type='text' placeholder='Enter string...' \n                  value={storedString} onChange={(e) => setStoredString(e.target.value)} />\n            \n            <h1>{t('headers.themeChanger')}</h1>\n            <button onClick={handleCurrentTheme}>Toggle Theme</button>\n\n            <h1>{t('headers.languageChanger')}</h1>\n            <button onClick={() => changeCurrentLanguage('en')}>English</button>\n            <button onClick={() => changeCurrentLanguage('es')}>Spanish</button>\n            \n          </React.Fragment>\n          )} />\n          <Route exact path='/archive' component={Archive} />\n\n      </div>\n    </Router>\n  );\n\n\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next'\r\nimport Backend from 'i18next-xhr-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\n\r\ni18n\r\n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n\r\n    .init({\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        backend: {\r\n            loadPath: '/locales/{{lng}}/{{ns}}.json'\r\n        },\r\n\r\n        interpolation: {\r\n            escapeValue: false\r\n        },\r\n\r\n        react: {\r\n            useSuspense: false\r\n        }\r\n    })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './hooks/i18n'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}