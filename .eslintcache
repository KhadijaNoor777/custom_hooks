[{"E:\\react_js\\custom_hooks\\src\\index.js":"1","E:\\react_js\\custom_hooks\\src\\App.js":"2","E:\\react_js\\custom_hooks\\src\\reportWebVitals.js":"3","E:\\react_js\\custom_hooks\\src\\hooks\\useLocalStorage.js":"4","E:\\react_js\\custom_hooks\\src\\hooks\\useChangeTheme.js":"5","E:\\react_js\\custom_hooks\\src\\hooks\\i18n.js":"6","E:\\react_js\\custom_hooks\\src\\Archive.js":"7"},{"size":523,"mtime":1609849182279,"results":"8","hashOfConfig":"9"},{"size":1965,"mtime":1609923086172,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":944,"mtime":1609928684174,"results":"12","hashOfConfig":"9"},{"size":509,"mtime":1609923268254,"results":"13","hashOfConfig":"9"},{"size":567,"mtime":1609851454644,"results":"14","hashOfConfig":"9"},{"size":1321,"mtime":1609854033253,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cew9o7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"E:\\react_js\\custom_hooks\\src\\index.js",[],["36","37"],"E:\\react_js\\custom_hooks\\src\\App.js",["38","39","40","41"],"import React, {useState, useSuspense} from 'react'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport useChangeTheme from './hooks/useChangeTheme'\nimport { useTranslation } from 'react-i18next'\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Archive from './Archive'\nimport './App.css';\n\nfunction App() {\n\n  const [storedString, setStoredString] = useLocalStorage(\"stored string\", \"\");\n  const [currentTheme, setCurrentTheme] = useChangeTheme()\n  const [t, i18n] = useTranslation()\n\n\n  const handleCurrentTheme = () => {\n    if(currentTheme !== 'dark'){\n      setCurrentTheme('dark')\n    }\n    else if(currentTheme === 'dark'){\n      setCurrentTheme('light')\n    }\n    else{\n      setCurrentTheme('light')\n    }\n  }\n\n  const theme = {\n    background: currentTheme == 'dark' ? 'black' : 'white',\n    color: currentTheme == 'dark' ? 'white' : 'black'\n  }\n\n  const changeCurrentLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  }\n\n  return (\n    <Router>\n      \n      <div style={theme} className='Posts'>\n        <Route exact path='/' render={props =>(\n          <React.Fragment>\n\n            <h1>{t('headers.about')}</h1>\n            <Link to='/archive'><h1>{t('headers.archive')}</h1></Link>\n\n            <h1>{t('headers.saveValue')}</h1>\n            <input type='text' placeholder='Enter string...' \n                  value={storedString} onChange={(e) => setStoredString(e.target.value)} />\n            \n            <h1>{t('headers.themeChanger')}</h1>\n            <button onClick={handleCurrentTheme}>Toggle Theme</button>\n\n            <h1>{t('headers.languageChanger')}</h1>\n            <button onClick={() => changeCurrentLanguage('en')}>English</button>\n            <button onClick={() => changeCurrentLanguage('es')}>Spanish</button>\n            \n          </React.Fragment>\n          )} />\n          <Route exact path='/archive' component={Archive} />\n\n      </div>\n    </Router>\n  );\n\n\n}\n\n\n\n\nexport default App;\n","E:\\react_js\\custom_hooks\\src\\reportWebVitals.js",[],"E:\\react_js\\custom_hooks\\src\\hooks\\useLocalStorage.js",["42"],"import React, {useState} from 'react'\r\n\r\n//setting initial state\r\nfunction useLocalStorage(key, initialValue) {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try{\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    })\r\n\r\n    const setValue = (value) => {\r\n        try{\r\n            //Allow value to be a function so we have same API as useState????\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore)\r\n    \r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore))\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n       \r\n    }\r\n\r\n    return [storedValue, setValue];\r\n\r\n}\r\n\r\nexport default useLocalStorage;\r\n","E:\\react_js\\custom_hooks\\src\\hooks\\useChangeTheme.js",["43","44","45","46"],"import React, {useState, useEffect} from 'react'\r\nimport useLocalStorage from './useLocalStorage'\r\n\r\nfunction useChangeTheme(){\r\n\r\n    const [theme, setTheme] = useLocalStorage(\"theme\", \"\")\r\n\r\n    useEffect(() => {\r\n        const postsEl = document.getElementsByClassName('Posts')\r\n        console.log('initial theme', theme)\r\n        if(theme == 'dark'){\r\n            postsEl[0] && postsEl[0].classList.add(theme)\r\n        }\r\n    }, [])\r\n\r\n    return [theme, setTheme];\r\n\r\n}\r\n\r\nexport default useChangeTheme;","E:\\react_js\\custom_hooks\\src\\hooks\\i18n.js",[],"E:\\react_js\\custom_hooks\\src\\Archive.js",["47"],"import React, {useState} from 'react'\r\n\r\nfunction Archive() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        setUser(userData);\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Archive</h1>\r\n            <h1>Login</h1>\r\n            <form  onSubmit={handleSubmit}>\r\n                <input type='text' placeholder='Username' \r\n                       onChange={(e) => setUsername(e.target.value)}  \r\n                       value={username} \r\n                /><br/>\r\n                <input type='password' placeholder='Password' \r\n                       onChange={(e) => setPassword(e.target.value)}  \r\n                       value={password} \r\n                /><br/>\r\n                <button type='submit'>Login</button>\r\n            </form>\r\n\r\n            {/* {user && JSON.stringify(user, null, 100)} */}\r\n            {user && <div>{user.username} <br/> {user.password} </div>}\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst formStyle = {\r\n    textAlign: 'center',\r\n\r\n}\r\n\r\n\r\nexport default Archive;\r\n",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":24},{"ruleId":"54","severity":1,"message":"58","line":1,"column":26,"nodeType":"56","messageId":"57","endLine":1,"endColumn":37},{"ruleId":"59","severity":1,"message":"60","line":29,"column":30,"nodeType":"61","messageId":"62","endLine":29,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":30,"column":25,"nodeType":"61","messageId":"62","endLine":30,"endColumn":27},{"ruleId":"54","severity":1,"message":"63","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":11,"column":18,"nodeType":"61","messageId":"62","endLine":11,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":14,"column":8,"nodeType":"66","endLine":14,"endColumn":10,"suggestions":"67"},{"ruleId":"54","severity":1,"message":"68","line":47,"column":7,"nodeType":"56","messageId":"57","endLine":47,"endColumn":16},{"ruleId":"50","replacedBy":"69"},{"ruleId":"52","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSuspense' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'formStyle' is assigned a value but never used.",["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [theme]",{"range":"76","text":"77"},[434,436],"[theme]"]